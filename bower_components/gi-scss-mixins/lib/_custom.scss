@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  }

  @else {
    @error 'No value found for `#{$breakpoint}`. ' + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

/**
 *
 * Simpler shortcut to create easily break points
 *
 */

@mixin breakpoint($width) {
	@media only screen and (max-width: $width) {
		@content;
	}
}

/**
 * Easy functions to create easily pure css arrows anywhere
 */

@mixin arrow-up($size: 10px, $color: #000) {
	width: 0;
	height: 0;
	border-left: $size solid transparent;
	border-right: $size solid transparent;
	border-bottom: $size solid $color;
}

@mixin arrow-down($size: 10px, $color: #000) {
	width: 0;
	height: 0;
	border-left: $size solid transparent;
	border-right: $size solid transparent;
	border-top: $size solid $color;
}

@mixin arrow-right($size: 10px, $color: #000) {
	width: 0;
	height: 0;
	border-top: $size solid transparent;
	border-bottom: $size solid transparent;
	border-left: $size solid $color;
}

@mixin arrow-left($size: 10px, $color: #000) {
	width: 0;
	height: 0;
	border-top: $size solid transparent;
	border-bottom: $size solid transparent;
	border-right: $size solid $color;
}

// Sizing shortcuts
// -------------------------
@mixin size($width, $height) {
	width: $width;
	height: $height;
}

@mixin square($size) {
	@include size($size, $size);
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
@mixin text-overflow {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

@mixin vertical-align {
	position: relative;
	top: 50%;
	@include transform(translateY(-50%));
}